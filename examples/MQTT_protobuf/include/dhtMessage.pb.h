/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_DHTMESSAGE_PB_H_INCLUDED
#define PB_DHTMESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _dhtMessage {
    bool has_t;
    float t;
    bool has_h;
    float h;
} dhtMessage;


/* Initializer values for message structs */
#define dhtMessage_init_default                  {false, 0, false, 0}
#define dhtMessage_init_zero                     {false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define dhtMessage_t_tag                         1
#define dhtMessage_h_tag                         2

/* Struct field encoding specification for nanopb */
#define dhtMessage_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FLOAT,    t,                 1) \
X(a, STATIC,   OPTIONAL, FLOAT,    h,                 2)
#define dhtMessage_CALLBACK NULL
#define dhtMessage_DEFAULT NULL

extern const pb_msgdesc_t dhtMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define dhtMessage_fields &dhtMessage_msg

/* Maximum encoded size of messages (where known) */
#define dhtMessage_size                          10

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
